#!/bin/bash

# Base directories
BASE_DIR="/home/zuckram/Studium/EP1/PlayUebung_2/Aufgabenblatt2"
JUNIT_DIR="/home/zuckram/Desktop/JUNIT/lib"

# Directory structure
SRC_DIR="$BASE_DIR/src"
LIB_DIR="$BASE_DIR/lib"
OUT_DIR="$BASE_DIR/out"
OUTPUT_FILE="$OUT_DIR/jUnitOutput.txt"

# Define arrays of JAR files
JUNIT_JAR="$JUNIT_DIR/junit-platform-console-standalone-1.9.3.jar"

declare -a PROJECT_JARS=(
    "$LIB_DIR/CodeDraw.jar"
    # Add more project JARs as needed
    # "$LIB_DIR/another.jar"
)

# Function to create classpath from arrays
create_classpath() {
    local classpath=""
    for jar in "$@"; do
        if [ -z "$classpath" ]; then
            classpath="$jar"
        else
            classpath="$classpath:$jar"
        fi
    done
    echo "$classpath"
}

# Create classpaths as needed
COMPILE_CLASSPATH=$(create_classpath "$JUNIT_JAR" "${PROJECT_JARS[@]}")
RUNTIME_CLASSPATH=$(create_classpath "$OUT_DIR" "${PROJECT_JARS[@]}")

# Source files
SOURCE_FILES="$SRC_DIR/Aufgabe5.java \
             $SRC_DIR/Aufgabe5Test.java"

# Compile
javac -cp "$COMPILE_CLASSPATH" \
      -d "$OUT_DIR" \
      $SOURCE_FILES

# Run tests
java -jar "$JUNIT_JAR" \
    --class-path "$RUNTIME_CLASSPATH" \
    --scan-classpath \
    --details=TREE > "$OUTPUT_FILE"

START_MARKER="Failures"
END_MARKER="Test run fini"

awk -v keyword="$START_MARKER" -v end_marker="$END_MARKER" '
    BEGIN { found=0 }
    {
        # Check if the line contains the keyword and start skipping lines
        if ($0 ~ keyword) {
            found=1
            next  # Skip the line with the keyword
        }

        # If found is true, keep skipping lines until the end marker is found
        if (found) {
            if ($0 ~ end_marker) {
                found=0  # Stop skipping after the end marker is found
                next  # Skip the line with the end marker too
            }
            next  # Skip all lines until end marker is found
        }

        # Print lines that are not affected by the deletion
        print
    }
' "$OUTPUT_FILE" > temp_file && mv temp_file "$OUTPUT_FILE"

cat "$OUTPUT_FILE"

# Run program
java -cp "$RUNTIME_CLASSPATH" Aufgabe5
